<div class="dashboard">
  <section class="dashboard-hero">
    <h1>Sleep & Wellness Dashboard</h1>
    <p>Your comprehensive health insights powered by Oura Ring</p>
  </section>

  <!-- Dashboard Stats Section -->
  <section class="dashboard-stats-section">
    <div class="dashboard-stats">
      <!-- Card 1 -->
      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-icon">üéØ</span>
          <span class="stat-title">Baseline Sleep Score</span>
        </div>
        <div class="stat-value"><%= @sleep_metric&.baseline_score %></div>
        <div class="stat-sub"><%= @sleep_metric&.baseline_duration %> (Program Start)</div>
      </div>

      <!-- Card 2 -->
      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-icon">üìà</span>
          <span class="stat-title">Current Average</span>
        </div>
        <div class="stat-value"><%= @sleep_metric&.current_avg_score %></div>
        <div class="stat-sub"><%= @sleep_metric&.current_duration %> ongoing</div>
      </div>

      <!-- Card 3 -->
      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-icon">‚ö°</span>
          <span class="stat-title">Improvement</span>
        </div>
        <div class="stat-value improvement"><%= @sleep_metric&.improvement_display %></div>
        <% if @sleep_metric && @sleep_metric.improvement > 10 %>
          <div class="oura-badge">Excellent Progress</div>
        <% end %>
      </div>

      <!-- Card 4 -->
      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-icon">üéØ</span>
          <span class="stat-title">Program Status</span>
        </div>
        <% improvement = @sleep_metric&.improvement.to_f %>
        <% if improvement < 10 %>
          <div class="oura-status-badge">üö® Needs Attention</div>
          <div class="stat-sub">Progress to 25% Goal <span class="stat-sub-value"><%= (improvement / 25 * 100).round %>%</span></div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: <%= [(improvement / 25 * 100), 100].min %>%; background: #ef4444;"></div>
          </div>
        <% elsif improvement < 25 %>
          <div class="oura-status-badge">‚ö†Ô∏è On the Way</div>
          <div class="stat-sub">Progress to 25% Goal <span class="stat-sub-value"><%= (improvement / 25 * 100).round %>%</span></div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: <%= [(improvement / 25 * 100), 100].min %>%; background: #f59e42;"></div>
          </div>
        <% elsif improvement < 50 %>
          <div class="oura-status-badge">üåü Great Progress</div>
          <div class="stat-sub">Progress to 50% Goal <span class="stat-sub-value"><%= (improvement / 50 * 100).round %>%</span></div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: <%= [(improvement / 50 * 100), 100].min %>%; background: #22c55e;"></div>
          </div>
        <% else %>
          <div class="oura-status-badge">üèÜ Outstanding</div>
          <div class="stat-sub">Progress to 50%+ Goal <span class="stat-sub-value">100%</span></div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: 100%; background: #2563eb;"></div>
          </div>
        <% end %>
      </div>
    </div>
  </section>

  <!-- Chart Section -->
  <section class="dashboard-chart-section">
    <div class="chart-card">
      <div style="display: flex; align-items: center; justify-content: space-between;">
        <h3 class="chart-title">Sleep Score Progress</h3>
        <div class="chart-filter" style="background: #f3f4f6; border-radius: 18px; padding: 6px 10px; display: flex; gap: 8px;">
          <button class="filter-btn active" data-days="7">7 Days</button>
          <button class="filter-btn" data-days="14">14 Days</button>
          <button class="filter-btn" data-days="30">30 Days</button>
          <button class="filter-btn" data-days="90">90 Days</button>
          <button class="filter-btn" id="customBtn" data-days="custom">
            <svg style="vertical-align: middle;" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="4" width="18" height="18" rx="4"/><path d="M16 2v4M8 2v4M3 10h18"/></svg>
            Custom
          </button>
          <input type="date" id="customStart" style="display:none; margin-left:4px;">
          <span style="display:none;" id="toLabel">to</span>
          <input type="date" id="customEnd" style="display:none; margin-left:4px;">
          <button id="applyCustom" style="display:none; margin-left:4px;">Apply</button>
        </div>
      </div>
      <p class="chart-sub">Daily sleep scores compared to baseline</p>
      <canvas id="sleepChart"></canvas>
    </div>
  </section>

  <!-- Metrics Grid Section -->
  <section class="dashboard-metrics-section">
    <div class="metrics-grid">
      <div class="metric-card">
        <div class="metric-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <h3 class="metric-title">Sleep Score</h3>
        <p class="metric-value"><%= @todays_score %></p>
        <p class="metric-subtitle">Today's score</p>
      </div>

      <div class="metric-card">
        <div class="metric-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <polyline points="23,6 13.5,15.5 8.5,10.5 1,18" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <polyline points="17,6 23,6 23,12" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <h3 class="metric-title">Total Sleep</h3>
        <p class="metric-value"><%= Time.at(@today_sleep["total_sleep_duration"]).utc.strftime("%Hh %Mm") %></p>
        <p class="metric-subtitle">Duration</p>
      </div>

      <div class="metric-card">
        <div class="metric-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <line x1="12" y1="20" x2="12" y2="10" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round"/>
            <line x1="18" y1="20" x2="18" y2="4" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round"/>
            <line x1="6" y1="20" x2="6" y2="16" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </div>
        <h3 class="metric-title">Efficiency</h3>
        <p class="metric-value"><%= @today_sleep["efficiency"] %>%</p>
        <p class="metric-subtitle">Sleep quality</p>
      </div>

      <div class="metric-card">
        <div class="metric-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="#1d4ed8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <h3 class="metric-title">Avg Heart Rate</h3>
        <p class="metric-value"><%= @today_sleep["average_heart_rate"] %> bpm</p>
        <p class="metric-subtitle">During sleep</p>
      </div>

      <div class="metric-card">
        <h3 class="metric-title">Deep Sleep</h3>
        <p class="metric-value"><%= Time.at(@today_sleep["deep_sleep_duration"]).utc.strftime("%Hh %Mm") %></p>
        <p class="metric-subtitle">Restorative phase</p>
      </div>

      <div class="metric-card">
        <h3 class="metric-title">Light Sleep</h3>
        <p class="metric-value"><%= Time.at(@today_sleep["light_sleep_duration"]).utc.strftime("%Hh %Mm") %></p>
        <p class="metric-subtitle">Transition phase</p>
      </div>

      <div class="metric-card">
        <h3 class="metric-title">REM Sleep</h3>
        <p class="metric-value"><%= Time.at(@today_sleep["rem_sleep_duration"]).utc.strftime("%Hh %Mm") %></p>
        <p class="metric-subtitle">Dream phase</p>
      </div>

      <div class="metric-card">
        <h3 class="metric-title">Breathing Rate</h3>
        <p class="metric-value"><%= @today_sleep["average_breath"] %> rpm</p>
        <p class="metric-subtitle">Average during sleep</p>
      </div>
    </div>
  </section>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // ...existing chart code...

  // Filter logic
  const filterBtns = document.querySelectorAll('.filter-btn');
  const customBtn = document.getElementById('customBtn');
  const customStart = document.getElementById('customStart');
  const customEnd = document.getElementById('customEnd');
  const toLabel = document.getElementById('toLabel');
  const applyCustom = document.getElementById('applyCustom');

  filterBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      filterBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      if (btn.dataset.days === 'custom') {
        customStart.style.display = '';
        customEnd.style.display = '';
        toLabel.style.display = '';
        applyCustom.style.display = '';
      } else {
        customStart.style.display = 'none';
        customEnd.style.display = 'none';
        toLabel.style.display = 'none';
        applyCustom.style.display = 'none';
        // Call API or reload data for selected days
        fetchChartData(btn.dataset.days);
      }
    });
  });

  applyCustom.addEventListener('click', function() {
    if (customStart.value && customEnd.value) {
      // Call API or reload data for custom range
      fetchChartData('custom', customStart.value, customEnd.value);
    }
  });

  function fetchChartData(range, startDate, endDate) {
    // Example: Use AJAX to fetch data and update chart
    // You should implement this endpoint in your Rails controller
    let url = `/oura_dashboard/sleep_scores?range=${range}&client_id=<%= @client.id %>`;
    if (range === 'custom') {
      url += `&start=${customStart.value}&end=${customEnd.value}`;
    }
    fetch(url)
      .then(res => res.json())
      .then(data => {
        // Update chart with new data
        window.sleepChart.data.labels = data.labels;
        window.sleepChart.data.datasets[0].data = data.sleep_scores;
        window.sleepChart.update();
      });
  }

  // Store chart instance globally for updates
  const ctx = document.getElementById('sleepChart').getContext('2d');
  window.sleepChart = new Chart(ctx, {
    // ...existing chart config...
    type: 'line',
    data: {
      labels: <%= raw @labels.to_json %>,
      datasets: [{
        label: "Sleep Score",
        data: <%= raw @sleep_scores.to_json %>,
        borderColor: "#2563eb",
        backgroundColor: "#2563eb",
        tension: 0.4,
        fill: false,
        pointRadius: 5,
        pointHoverRadius: 6,
        pointBackgroundColor: "#2563eb",
        pointBorderColor: "#fff",
        pointBorderWidth: 2
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      interaction: {
        mode: 'nearest',
        intersect: false
      },
      plugins: {
        tooltip: {
          backgroundColor: "#ffffff",
          borderColor: "#e5e7eb",
          borderWidth: 1,
          titleColor: "#374151",
          titleFont: { weight: '600', size: 13 },
          bodyColor: "#1d4ed8",
          bodyFont: { size: 13 },
          padding: 10,
          displayColors: false,
          usePointStyle: false,
          cornerRadius: 6,
          callbacks: {
            label: function(context) {
              return `Sleep Score : ${context.parsed.y}`;
            }
          }
        },
        legend: { display: false }
      },
      scales: {
        y: {
          min: 0,
          max: 100,
          grid: { color: "#e5e7eb" }
        },
        x: {
          grid: { color: "#f3f4f6" }
        }
      }
    },
    plugins: [{
      id: 'baselineLine',
      afterDraw: (chart) => {
        const { ctx, chartArea: { left, right }, scales: { y } } = chart;
        const baseline = <%= @sleep_metric&.baseline_score %>;
        ctx.save();
        ctx.beginPath();
        ctx.moveTo(left, y.getPixelForValue(baseline));
        ctx.lineTo(right, y.getPixelForValue(baseline));
        ctx.lineWidth = 1.5;
        ctx.strokeStyle = "#ef4444";
        ctx.setLineDash([6, 6]);
        ctx.stroke();
        ctx.restore();
        ctx.fillStyle = "#6b7280";
        ctx.font = "12px sans-serif";
        ctx.fillText("Baseline", right - 55, y.getPixelForValue(baseline) - 5);
      }
    }]
  });
});
</script>
